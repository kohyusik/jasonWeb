buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
        springDependencyManagementPluginVersion = '1.0.6.RELEASE'

        springCloudVersion = 'Finchley.RELEASE'
        springCloudNetflixVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementPluginVersion}")
    }
}

allprojects {
    group = 'com.jason'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-web')
        testCompile group: 'junit', name: 'junit', version: '4.12'
        runtime('org.springframework.boot:spring-boot-devtools')
        compileOnly('org.projectlombok:lombok')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
}


//project(':service-registry') {
//    dependencies {
//        compile project(':module-common')
//    }
//}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//	implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
//	implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('com.h2database:h2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
//	testImplementation('org.springframework.security:spring-security-test')
}

//task copyTask(type: Copy) {
//
//    def properties = new Properties()
//    file('conf/build.properties').withInputStream {
//        properties.load(it)
//    }
//
//    from('sample_script') {
//        include '**/*.sh'
//        rename(/(.+)-sample/, '$1')
//    }
//    into 'build/libs/bin'
//    filter(ReplaceTokens, tokens: properties)
//}
//
//build.finalizedBy(copyTask)